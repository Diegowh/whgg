# Generated by Django 4.2.6 on 2023-12-05 12:23

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=200)),
                ('plaintext', models.TextField(null=True)),
                ('description', models.TextField()),
                ('gold_base', models.IntegerField()),
                ('gold_total', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Summoner',
            fields=[
                ('puuid', models.CharField(max_length=200, primary_key=True, serialize=False, unique=True)),
                ('id', models.CharField(max_length=200)),
                ('name', models.CharField(max_length=200)),
                ('icon_id', models.IntegerField()),
                ('summoner_level', models.IntegerField()),
                ('last_update', models.BigIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='SummonerSpell',
            fields=[
                ('id', models.CharField(max_length=200, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=200)),
                ('key', models.IntegerField(default=0)),
                ('description', models.TextField(max_length=300)),
                ('image_name', models.CharField(max_length=200)),
                ('sprite_name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Version',
            fields=[
                ('version', models.CharField(default='0.0.0', max_length=200, primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.CharField(max_length=200, primary_key=True, serialize=False, unique=True)),
                ('game_start', models.BigIntegerField()),
                ('game_end', models.BigIntegerField()),
                ('game_duration', models.BigIntegerField()),
                ('game_mode', models.CharField(max_length=100)),
                ('game_type', models.CharField(max_length=100)),
                ('champion_played', models.CharField(max_length=200)),
                ('win', models.BooleanField()),
                ('kills', models.IntegerField()),
                ('deaths', models.IntegerField()),
                ('assists', models.IntegerField()),
                ('kda', models.FloatField()),
                ('minion_kills', models.IntegerField()),
                ('vision_score', models.IntegerField()),
                ('team_position', models.CharField(max_length=200)),
                ('team_id', models.IntegerField(default=0)),
                ('item_purchase', models.ManyToManyField(related_name='summoner_matches', to='summoner_profile.item')),
                ('summoner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='summoner_matches', to='summoner_profile.summoner')),
                ('summoner_spells', models.ManyToManyField(related_name='summoner_matches', to='summoner_profile.summonerspell')),
            ],
        ),
        migrations.CreateModel(
            name='RankedStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('queue_type', models.CharField(max_length=200)),
                ('tier', models.CharField(max_length=50)),
                ('rank', models.CharField(max_length=50)),
                ('league_points', models.IntegerField()),
                ('wins', models.IntegerField()),
                ('losses', models.IntegerField()),
                ('winrate', models.IntegerField()),
                ('summoner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ranked_stats', to='summoner_profile.summoner')),
            ],
            options={
                'unique_together': {('queue_type', 'summoner')},
            },
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('puuid', models.CharField(max_length=200)),
                ('name', models.CharField(max_length=200)),
                ('champion_name', models.CharField(max_length=200)),
                ('team_id', models.IntegerField()),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='summoner_profile.match')),
            ],
            options={
                'unique_together': {('puuid', 'match')},
            },
        ),
        migrations.CreateModel(
            name='ChampionStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('games', models.IntegerField(default=0)),
                ('wins', models.IntegerField(default=0)),
                ('losses', models.IntegerField(default=0)),
                ('winrate', models.IntegerField(default=0)),
                ('kills', models.DecimalField(decimal_places=1, default=0.0, max_digits=5)),
                ('deaths', models.DecimalField(decimal_places=1, default=0.0, max_digits=5)),
                ('assists', models.DecimalField(decimal_places=1, default=0.0, max_digits=5)),
                ('kda', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('minion_kills', models.DecimalField(decimal_places=1, default=0.0, max_digits=5)),
                ('summoner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='champion_stats', to='summoner_profile.summoner')),
            ],
            options={
                'unique_together': {('name', 'summoner')},
            },
        ),
    ]
